stages:
  - install
  - build
  - test
  - deploy

install_node:
  stage: install
  script:
    - apt-get update -y
    - curl -sL https://deb.nodesource.com/setup_17.x | bash
    - apt-get install nodejs -yq

clean_dependencies:
  stage: build
  script:
    - echo "Start building dependencies ...."
    - mvn clean package
    - echo "Done"

build_backend_docker_image:
  stage: build
  script:
    - echo "Start building backend docker image ..."
    - docker-compose --env-file ./Env/test.env -f docker-compose-backend.yml up -d
    - docker-compose -f docker-compose-backend.yml down
    - echo "Done"
  except:
    - frontend


build_frontend_docker_image:
  stage: build
  before_script:
    - cd frontend
  script:
    - echo "Start building frontend docker image"
    - npm run build
    - cd ..
    - docker-compose -f docker-compose-frontend.yml up -d
    - docker-compose -f docker-compose-frontend.yml down

test_internal_API:
  stage: test
  script:
    - echo "Start testing internal API..."
    - mvn test
    - echo "Done"
  except:
    - frontend

test_frontend:
  stage: test
  script:
    - echo "Start testing front end ..."
    - echo "Done"

deploy_project:
  stage: deploy
  services:
    - docker:dind
  before_script:
    - docker login -u "$CD_DOCKER_HUB_USER" -p "$CD_DOCKER_HUB_PASSWORD"
  script:
    - echo "Start deploying to Docker hub ..."
    - docker-compose --env-file ./Env/test.env -f docker-compose-backend.yml up -d
    - docker push "$CD_DOCKER_HUB_IMAGE"
    - docker-compose -f docker-compose-backend.yml down
    - echo "Done"
  only:
    - master
